stages:
  - compile
  - sonarqube-check
#  - deploy_docker
#  - deploy_prod

cache:
  paths:
    - .m2/repository

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAVEN_OPTS_CLI: "--batch-mode --fail-at-end --show-version"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

compile-job:
  stage: compile
  script:
    - echo "Compiling the code..."
    - mvn clean compile $MAVEN_OPTS_CLI -DskipTests

sonarqube-check-job:
  stage: sonarqube-check
  dependencies:
    - compile-job
  script:
    - mvn verify sonar:sonar $MAVEN_OPTS_CLI
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'

#deploy_docker-job:
#  stage: deploy_docker
#  script:
#    - echo "Pushing net.virtualboss.application.service images to docker hub..."
#    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin
#    - docker push "ragaev/discovery" --all-tags
#    - docker push "ragaev/authentication" --all-tags
#    - docker push "ragaev/user-net.virtualboss.application.service" --all-tags
#    - docker push "ragaev/post-net.virtualboss.application.service" --all-tags
#    - docker push "ragaev/dialog-net.virtualboss.application.service" --all-tags
#    - docker push "ragaev/notification-net.virtualboss.application.service" --all-tags
#    - docker push "ragaev/gateway" --all-tags
#    - docker push "ragaev/admin-net.virtualboss.application.service" --all-tags
#    - docker push "ragaev/geo-net.virtualboss.application.service" --all-tags
#    - docker push "ragaev/audit-net.virtualboss.application.service" --all-tags
#  rules:
#    - if: $CI_COMMIT_BRANCH == 'develop'
#
#deploy_prod-job:
#  stage: deploy_prod
#  before_script:
#    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PRIVATE_KEY" | ssh-add -
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - ssh-keyscan $PROD_HOST >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - scp -r ./docker $PROD_USER@$PROD_HOST:~
#    - ssh $PROD_USER@$PROD_HOST "docker compose -f ./docker/docker-compose.services.yml down"
#    - ssh $PROD_USER@$PROD_HOST "docker compose -f ./docker/docker-compose.yml down"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/discovery:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/authentication:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/user-net.virtualboss.application.service:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/post-net.virtualboss.application.service:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/dialog-net.virtualboss.application.service:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/notification-net.virtualboss.application.service:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/admin-net.virtualboss.application.service:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/geo-net.virtualboss.application.service:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/audit-net.virtualboss.application.service:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/gateway:0.0.1-SNAPSHOT"
#    - ssh $PROD_USER@$PROD_HOST "docker image rm ragaev/frontend:latest --force"
#    - ssh $PROD_USER@$PROD_HOST "docker compose -f ./docker/docker-compose.yml up -d --force-recreate --remove-orphans"
#    - ssh $PROD_USER@$PROD_HOST "docker compose -f ./docker/docker-compose.services.yml up -d"
#  rules:
#    - if: $CI_COMMIT_BRANCH == 'develop'
